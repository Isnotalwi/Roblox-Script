-- hi thank you to see this

if true then
--// Cache

local getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, lower, gsub, match = getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, string.lower, string.gsub, string.match

--// Loaded check

if getgenv().ED_AntiKick then
	return
end

--// Variables

local cloneref = cloneref or function(...) 
	return ...
end

local clonefunction = clonefunction or function(...)
	return ...
end

local Players, LocalPlayer, StarterGui = cloneref(game:GetService("Players")), cloneref(game:GetService("Players").LocalPlayer), cloneref(game:GetService("StarterGui"))

local SetCore = clonefunction(StarterGui.SetCore)
--local GetDebugId = clonefunction(game.GetDebugId)
local FindFirstChild = clonefunction(game.FindFirstChild)

local CompareInstances = (CompareInstances and function(Instance1, Instance2)
		if typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance" then
			return CompareInstances(Instance1, Instance2)
		end
	end)
or
function(Instance1, Instance2)
	return (typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance")-- and GetDebugId(Instance1) == GetDebugId(Instance2)
end

local CanCastToSTDString = function(...)
	return pcall(FindFirstChild, game, ...)
end

--// Global Variables

getgenv().ED_AntiKick = {
	Enabled = true, -- Set to false if you want to disable the Anti-Kick.
	SendNotifications = true, -- Set to true if you want to get notified for every event.
	CheckCaller = true -- Set to true if you want to disable kicking by other user executed scripts.
}

--// Main

local OldNamecall; OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
	local self, message = ...
	local method = getnamecallmethod()
	
	if ((getgenv().ED_AntiKick.CheckCaller and not checkcaller()) or true) and CompareInstances(self, LocalPlayer) and gsub(method, "^%l", string.upper) == "Kick" and ED_AntiKick.Enabled then
		if CanCastToSTDString(message) then
			if getgenv().ED_AntiKick.SendNotifications then
				SetCore(StarterGui, "SendNotification", {
					Title = ".",
					Text = "Successfully intercepted an attempted kick.",
					Icon = "rbxassetid://6238540373",
					Duration = 2
				})
			end

			return
		end
	end

	return OldNamecall(...)
end))

local OldFunction; OldFunction = hookfunction(LocalPlayer.Kick, function(...)
	local self, Message = ...

	if ((ED_AntiKick.CheckCaller and not checkcaller()) or true) and CompareInstances(self, LocalPlayer) and ED_AntiKick.Enabled then
		if CanCastToSTDString(Message) then
			if ED_AntiKick.SendNotifications then
				SetCore(StarterGui, "SendNotification", {
					Title = ".",
					Text = "Successfully intercepted an attempted kick.",
					Icon = "rbxassetid://6238540373",
					Duration = 2
				})
			end

			return
		end
	end
end)

if getgenv().ED_AntiKick.SendNotifications then
	StarterGui:SetCore("SendNotification", {
		Title = ".",
		Text = "Anti-Kick Loaded",
		Icon = "rbxassetid://6238537240",
		Duration = 3
	})
end
end

if true then
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -100, 0.5, -25)
ToggleButton.Text = "Start Script"
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = ToggleButton

getgenv().Yollow = false

local function toggleScript()
    if getgenv().Yollow then
        getgenv().Yollow = false
        ToggleButton.Text = "Start Script"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    else
        getgenv().Yollow = true
        ToggleButton.Text = "Stop Script"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        spawn(function()
            while getgenv().Yollow and task.wait() do
                local function fireTouchInterest(targetPart)
                    pcall(function()
                        targetPart = targetPart:FindFirstAncestorWhichIsA("Part")
                        if targetPart then
                            if firetouchinterest then
                                spawn(function()
                                    local playerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                    if playerRoot then
                                        firetouchinterest(targetPart, playerRoot, 1)
                                        wait(0.1)
                                        firetouchinterest(targetPart, playerRoot, 0)
                                    end
                                end)
                            end
                            local playerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if playerRoot then
                                targetPart.CFrame = playerRoot.CFrame
                            end
                        end
                    end)
                end

                spawn(function()
                    for _, object in ipairs(workspace:GetDescendants()) do
                        pcall(function()
                            if object:IsA("TouchTransmitter") then
                                fireTouchInterest(object)
                            end
                        end)
                    end
                end)
            end
        end)
    end
end

ToggleButton.MouseButton1Click:Connect(toggleScript)

local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = ToggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragInput = nil
            end
        end)
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragInput then
        update(input)
    end
end)

local CreditLabel = Instance.new("TextLabel")
CreditLabel.Parent = ScreenGui
CreditLabel.Size = UDim2.new(0, 200, 0, 50)
CreditLabel.Position = UDim2.new(0.5, -100, 0.9, -25)
CreditLabel.Text = "Credits: Sibuxiang"
CreditLabel.BackgroundTransparency = 1
CreditLabel.TextSize = 14-- hi thank you to see this

if true then
--// Cache

local getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, lower, gsub, match = getgenv, getnamecallmethod, hookmetamethod, hookfunction, newcclosure, checkcaller, string.lower, string.gsub, string.match

--// Loaded check

if getgenv().ED_AntiKick then
	return
end

--// Variables

local cloneref = cloneref or function(...) 
	return ...
end

local clonefunction = clonefunction or function(...)
	return ...
end

local Players, LocalPlayer, StarterGui = cloneref(game:GetService("Players")), cloneref(game:GetService("Players").LocalPlayer), cloneref(game:GetService("StarterGui"))

local SetCore = clonefunction(StarterGui.SetCore)
--local GetDebugId = clonefunction(game.GetDebugId)
local FindFirstChild = clonefunction(game.FindFirstChild)

local CompareInstances = (CompareInstances and function(Instance1, Instance2)
		if typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance" then
			return CompareInstances(Instance1, Instance2)
		end
	end)
or
function(Instance1, Instance2)
	return (typeof(Instance1) == "Instance" and typeof(Instance2) == "Instance")-- and GetDebugId(Instance1) == GetDebugId(Instance2)
end

local CanCastToSTDString = function(...)
	return pcall(FindFirstChild, game, ...)
end

--// Global Variables

getgenv().ED_AntiKick = {
	Enabled = true, -- Set to false if you want to disable the Anti-Kick.
	SendNotifications = true, -- Set to true if you want to get notified for every event.
	CheckCaller = true -- Set to true if you want to disable kicking by other user executed scripts.
}

--// Main

local OldNamecall; OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
	local self, message = ...
	local method = getnamecallmethod()
	
	if ((getgenv().ED_AntiKick.CheckCaller and not checkcaller()) or true) and CompareInstances(self, LocalPlayer) and gsub(method, "^%l", string.upper) == "Kick" and ED_AntiKick.Enabled then
		if CanCastToSTDString(message) then
			if getgenv().ED_AntiKick.SendNotifications then
				SetCore(StarterGui, "SendNotification", {
					Title = "Exunys Developer - Anti-Kick",
					Text = "Successfully intercepted an attempted kick.",
					Icon = "rbxassetid://6238540373",
					Duration = 2
				})
			end

			return
		end
	end

	return OldNamecall(...)
end))

local OldFunction; OldFunction = hookfunction(LocalPlayer.Kick, function(...)
	local self, Message = ...

	if ((ED_AntiKick.CheckCaller and not checkcaller()) or true) and CompareInstances(self, LocalPlayer) and ED_AntiKick.Enabled then
		if CanCastToSTDString(Message) then
			if ED_AntiKick.SendNotifications then
				SetCore(StarterGui, "SendNotification", {
					Title = ".",
					Text = "Successfully intercepted an attempted kick.",
					Icon = "rbxassetid://6238540373",
					Duration = 2
				})
			end

			return
		end
	end
end)

if getgenv().ED_AntiKick.SendNotifications then
	StarterGui:SetCore("SendNotification", {
		Title = ".",
		Text = "Anti-Kick Loaded",
		Icon = "rbxassetid://6238537240",
		Duration = 3
	})
end
end

if true then
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -100, 0.5, -25)
ToggleButton.Text = "Start Script"
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = ToggleButton

getgenv().Yollow = false

local function toggleScript()
    if getgenv().Yollow then
        getgenv().Yollow = false
        ToggleButton.Text = "Start Script"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    else
        getgenv().Yollow = true
        ToggleButton.Text = "Stop Script"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        spawn(function()
            while getgenv().Yollow and task.wait() do
                local function fireTouchInterest(targetPart)
                    pcall(function()
                        targetPart = targetPart:FindFirstAncestorWhichIsA("Part")
                        if targetPart then
                            if firetouchinterest then
                                spawn(function()
                                    local playerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                                    if playerRoot then
                                        firetouchinterest(targetPart, playerRoot, 1)
                                        wait(0.1)
                                        firetouchinterest(targetPart, playerRoot, 0)
                                    end
                                end)
                            end
                            local playerRoot = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if playerRoot then
                                targetPart.CFrame = playerRoot.CFrame
                            end
                        end
                    end)
                end

                spawn(function()
                    for _, object in ipairs(workspace:GetDescendants()) do
                        pcall(function()
                            if object:IsA("TouchTransmitter") then
                                fireTouchInterest(object)
                            end
                        end)
                    end
                end)
            end
        end)
    end
end

ToggleButton.MouseButton1Click:Connect(toggleScript)

local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = ToggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragInput = nil
            end
        end)
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragInput then
        update(input)
    end
end)

local CreditLabel = Instance.new("TextLabel")
CreditLabel.Parent = ScreenGui
CreditLabel.Size = UDim2.new(0, 200, 0, 50)
CreditLabel.Position = UDim2.new(0.5, -100, 0.9, -25)
CreditLabel.Text = "Credits: Sibuxiang"
CreditLabel.BackgroundTransparency = 1
CreditLabel.TextSize = 14
CreditLabel.TextStrokeTransparency = 0.8
CreditLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

local function updateRGBColor()
    while true do
        for i = 0, 255 do
            CreditLabel.TextColor3 = Color3.fromRGB(i, 255 - i, math.abs(128 - i))
            wait(0.01)
        end
    end
end

spawn(updateRGBColor)
end
CreditLabel.TextStrokeTransparency = 0.8
CreditLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

local function updateRGBColor()
    while true do
        for i = 0, 255 do
            CreditLabel.TextColor3 = Color3.fromRGB(i, 255 - i, math.abs(128 - i))
            wait(0.01)
        end
    end
end

spawn(updateRGBColor)
end
